"use strict";angular.module("siteApp",["hljs"]),angular.module("siteApp").controller("MainCtrl",["$scope","$sce",function(a,b){a.methods=[{signature:".sub(channels, fn [, id])",description:"Subscribes to the given <code>channels</code> with a handler function <code>fn</code>. It's aliased with an optional <code>id</code>.",params:[{name:"channels",types:["string","regexp"],description:"Channels to subscribe to."},{name:"fn",types:["function"],description:"Function that is executed when a message is published to one of the channels."},{name:"id",types:["string"],description:"Identifier used when unsubscribing.",optional:!0}]},{signature:".pub(channels [, data1, data2, ..., dataN])",description:"Publishes <code>data1...dataN</code> to the given <code>channels</code>.",params:[{name:"channels",types:["string","regexp"],description:"Channels to publish to."},{name:"data*",types:["any"],description:"Data to publish."}]},{signature:".unsub(channels, fnId)",description:"Unsubscribes a subscriber identified from the handler function or alias <code>fnId</code> from the given <code>channels</code>.",params:[{name:"channels",types:["string","regexp"],description:"Channels to unsubscribe to."},{name:"fnId",types:["string","function"],description:"Subscriber to remove.  Identified by the alias (if provided on subscription) or the handling function."}]},{signature:".subs(channels)",description:"Returns an array of known subscribers to the given <code>channels</code>.",params:[{name:"channels",types:["string","regexp"],description:"Channels to find the subscribers of.  A blank value will return the subscribers for all channels."}]},{signature:".clear(channels)",description:"Destroys the given <code>channels</code> and unsubscribes all subscribers from said channels.",params:[{name:"channels",types:["string","regexp"],description:"Channels to destroy.  A blank value will destroy all channels."}]},{signature:".channelsAsArray()",description:"Returns all known channels as an array."},{signature:".newInstance()",description:"Creates a new, encapsulated instance of <samp>Crier</samp>"}],angular.forEach(a.methods,function(a){a.description=b.trustAsHtml(a.description),angular.forEach(a.params,function(a){for(var b={string:!1,regexp:!1,"boolean":!1,number:!1,"function":!1,any:!1},c=0;c<a.types.length;c++)b[a.types[c]]=!0;a.types=b})})}]);